create or replace function public.cw_air_data_changes()
returns trigger
security definer
language plpgsql
set search_path = ''
as $$
begin
  -- Broadcast the change event to the “cw_air_data” topic.
  -- TG_OP is the operation (INSERT/UPDATE/DELETE), TG_TABLE_NAME is the table,
  -- TG_TABLE_SCHEMA is the schema, NEW is the new row, OLD is the old row.
  perform realtime.broadcast_changes(
    'cw_air_data',          -- topic name
    TG_OP,                  -- event name (INSERT/UPDATE/DELETE)
    TG_OP,                  -- operation type
    TG_TABLE_NAME,          -- table name
    TG_TABLE_SCHEMA,        -- schema name
    NEW,                    -- new record
    OLD                     -- old record
  );
  return null;
end;
$$;

create trigger cw_air_data_broadcast_trigger
after insert or update or delete on public.cw_air_data
for each row
execute function cw_air_data_changes();